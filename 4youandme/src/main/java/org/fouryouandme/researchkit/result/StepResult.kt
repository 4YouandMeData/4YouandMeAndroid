package org.fouryouandme.researchkit.result

import org.fouryouandme.researchkit.step.Step
import java.util.*

/**
 * The StepResult class represents a result produced by a step
 * to hold all child results of type `T` produced by the step.
 *
 *
 * A step result is typically generated by the framework as the task proceeds. When the task
 * completes, it may be appropriate to serialize it for transmission to a server, or to immediately
 * perform analysis on it.
 *
 *
 * For example, a QuestionStep object produces a result of type `T` that becomes
 * a child of the [StepResult] object.
 */
class StepResult<T>(
    identifier: String,
    private var results: MutableMap<String, T> = mutableMapOf()
) : Result(identifier) {

    /**
     * Creates a StepResult from a [Step].
     *
     *
     * Using this constructor ensures that the StepResult has the correct identifier and
     * for the corresponding step.
     *
     * @param step the step from which to create the StepResult
     */
    constructor(step: Step) : this(step.identifier)

    init {

        startDate = Date()

    }

    fun getResults(): Map<String, T> = results

    fun setResults(results: MutableMap<String, T>) {
        this.results = results
    }

    /**
     * Returns the result stored using [.setResult].
     *
     * @return the result with the default identifier
     */
    val result: T?
        get() = getResultForIdentifier(DEFAULT_KEY)

    /**
     * Sets the result using the default key, useful when there is only a single result.
     *
     * @param result the result to save with the default key
     */
    fun setResult(result: T) {
        setResultForIdentifier(DEFAULT_KEY, result)
        endDate = Date()
    }

    /**
     * Returns the result for the given identifier, use this when there are multiple results for the
     * step.
     *
     * @param identifier the identifier used as the key for storing this result
     * @return the result for the given identifier
     */
    fun getResultForIdentifier(identifier: String): T? = results[identifier]

    /**
     * Sets the result for the given identifier, use when there are multiple results for the step.
     *
     *
     * If there is only one result, use the [.setResult] convenience method instead.
     *
     * @param identifier the identifier for the result
     * @param result the result to save
     */
    fun setResultForIdentifier(identifier: String, result: T) {
        results[identifier] = result
    }

    override fun toString(): String {
        val sb = StringBuffer("StepResult{")
        sb.append(", identifier='").append(identifier).append('\'')
        sb.append(", startDate=").append(startDate)
        sb.append(", endDate=").append(identifier)
        sb.append("results=").append(results)
        sb.append('}')
        return sb.toString()
    }

    companion object {
        /**
         * When StepResult only has a single value, pair that value with the following key
         */
        const val DEFAULT_KEY = "default_result"
    }
}